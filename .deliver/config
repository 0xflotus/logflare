APP="logflare"

BUILD_HOST="logflare-build.us-central1-a.logflare-232118"
BUILD_USER="logflare"
BUILD_AT="/home/logflare/app_build"

PRODUCTION_HOSTS="logflare-prod-cluster-group-bv6d.us-central1-f.logflare-232118 logflare-prod-cluster-group-mr0p.us-central1-b.logflare-232118 logflare-prod-cluster-group-z8xr.us-central1-c.logflare-232118"
PRODUCTION_USER="logflare"
DELIVER_TO="/home/logflare/app_release"

STAGING_HOSTS="logflare-staging-2cpu.us-central1-a.logflare-staging"
STAGING_USER="logflare"
DELIVER_TO="/home/logflare/app_release"

ECTO_REPOSITORY="Logflare.Repo"

pre_erlang_get_and_update_deps() {
  local _prod_secret_path="/home/logflare/app_config/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'
    "
  fi

  local _staging_secret_path="/home/logflare/app_config/staging.secret.exs"
  if [ "$TARGET_MIX_ENV" = "staging" ]; then
    __sync_remote "
      ln -sfn '$_staging_secret_path' '$BUILD_AT/config/staging.secret.exs'
    "
  fi
}

pre_erlang_clean_compile() {
  status "Preparing assets with: Webpack and phx.digest"
  __sync_remote "
    # runs the commands on the build host
    [ -f ~/.profile ] && source ~/.profile # load profile (optional)

    # fail if any command fails (recommended)
    set -e

    # enter the build directory on the build host (required)
    cd '$BUILD_AT'

    mkdir -p priv/static # required by the phoenix.digest task

    # installing yarn dependencies
    cd 'assets'
    yarn

    # building
    node_modules/.bin/webpack --mode production --silent

    # run your custom task
    cd '$BUILD_AT'
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phx.digest
  "
}

post_extract_release_archive() {
  status "Removing start_erl.data"
  __remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e
    cd $DELIVER_TO/$APP/var $SILENCE
    rm start_erl.data
  "
}
