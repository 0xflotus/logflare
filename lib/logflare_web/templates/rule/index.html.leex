<div class="subhead subhead-fixed">
  <div class="container mx-auto">
    <h5>~/logs/<%= link @source.name, to: Routes.source_path(@socket, :show, @source), class: "text-primary" %>/rules</h5>
  </div>
</div>
<div id="lql-rules-container" class="container mx-auto">
  <h5 class="header-margin">Rules</h5>
  <p>Route logs with rules. Rules will match against a log entry and copy it to the specified sink (another source).
    Save special entries with rules. Create a rule for signups, or bots or IP addresses using regular expressions.</p>
  <ul class="list-group">
    <%= if @rules == [] do %>
      <div> No rules yet... </div>
    <% end %>
    <%= for rule <- @rules do %>
      <li class="list-group-item">
        <a href="#" phx-click="delete_rule" phx-value-rule_id="<%= rule.id %>" >
          <i class="fa fa-trash"></i>
        </a>
        Matching <code><%= rule.lql_string %></code> routing to <code><%= rule.sink %></code>
      </li>
    <% end %>
  </ul>
  <%= f = form_for :rule, "#", phx_submit: "fsubmit" %>
  <%= live_component @socket, LogflareWeb.Lql.LqlFormLVC, f: f, lql_string: @lql_string %>
  <div class="form-group">
    <%= label f, :sink, "Sink source", class: "control-label" %>
    <% sink_form_options =  for s <- @sources, do: [key: s.name, value: s.token, disabled: s.disabled] %>
    <%= select f, :sink, sink_form_options, prompt: "Choose a sink", class: "form-control rules-input" %>
    <%= error_tag f, :sink %>
  </div>
  <div class="form-group">
    <%= submit id: :rule, class: "btn btn-primary btn-sm" do %>
      Add Rule
    <% end %>
  </div>
  <div>
    <%= if @error_message do %>
      <%= @error_message %>
    <% end %>
  </div>
</form>
</div>
