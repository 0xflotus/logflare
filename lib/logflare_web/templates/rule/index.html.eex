<div class="subhead subhead-fixed">
  <div class="container mx-auto">
    <h5>~/logs/<span class="text-primary overflow-scroll-nowrap"><%= @source.name %></span>/rules</h5>
  </div>
</div>

<div class="container mx-auto">
  <h5 class="header-margin">Rules</h5>
  <p>Route logs with rules. Rules will match against a log entry and copy it to the specified sink (another source).
  Save special entries with rules. Create a rule for signups, or bots or IP addresses using regular expressions.</p>
  <ul class="list-group">
  <%= for rule <- @rules do %>
    <li class="list-group-item">
      <%= link to: Routes.source_rule_path(@conn, :delete, @source.id, rule.id), method: :delete, class: "dashboard-links float-right" do %>
        <i class="fa fa-trash"></i>
      <% end %>
      Matching <code><%= rule.regex %></code> routing to <code><%= rule.sink %></code>
    </li>
  <% end %>
  </ul>
</div>
<div class="container mx-auto">
  <h5 class="header-margin">New Rule</h5>
  <%= form_for @changeset, Routes.source_rule_path(@conn, :create, @source.id), fn f -> %>
    <div class="form-group">
      <%= hidden_input f, :source, value: @source.id, class: "form-control rules-input" %>
      <%= error_tag f, :source %>
      <span class="rules">
        <%= label f, :regex, class: "control-label" %>
        <%= text_input f, :regex, placeholder: "\\| 4.. \\|", class: "form-control" %>
        <%= error_tag f, :regex %>
      </span>
      <span class="rules">
        <%= label f, :sink, class: "control-label" %>
        <%= select f, :sink, Enum.map(@sources, &[key: &1.name, value: &1.token, disabled: &1.disabled]), prompt: "Choose a sink", class: "form-control rules-input" %>
        <%= error_tag f, :sink %>
      </span>
      <small class="form-text text-muted">
        <code>\| 4.. \|</code> matches all 4xx requests. <code>Googlebot</code> will match all Googlebot requests.
      </small>
    </div>

    <%= submit "Add rule", class: "btn btn-primary" %>
  <% end %>
</div>
