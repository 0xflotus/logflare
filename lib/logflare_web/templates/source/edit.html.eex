<div class="subhead subhead-fixed">
  <div class="container mx-auto">
    <div class="log-settings float-right">
      <ul>
        <li><%= link to: Routes.source_rule_path(@conn, :index, @source) do %><i class="fas fa-code-branch"></i><span class="hide-on-mobile"> rules</span><% end %></li>
        <li><a href="mailto:support@logflare.app?Subject=Logflare%20Help" target="_top"><i class="fas fa-question-circle"></i> <span class="hide-on-mobile">help</a></span></li>
      </ul>
    </div>
    <h5>~/logs/<%= link @source.name, to: Routes.source_path(@conn, :show, @source), class: "text-primary" %>/edit</h5>
  </div>
</div>

<div class="container mx-auto">

  <h5 class="header-margin">Source Name</h5>
  <p>For example, <code>YourApp</code> would be good for all logs from your app. <code>YourApp.bots</code> would be a good place to keep all bot logs. Route logs with regex using <%= link to: Routes.source_rule_path(@conn, :index, @source) do %>rules<% end %>.</p>
  <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn a -> %>
    <div class="form-group">
      <%= text_input a, :name, placeholder: "YourApp.SourceName", class: "form-control form-control-margin" %>
      <%= error_tag a, :name %>
    </div>
    <%= submit "Update name", class: "btn btn-primary form-button" %>
  <% end %>

  <h5 class="header-margin">Email Alerts</h5>
  <p>Send emails when this source gets new events. Add email addresses below. Sometimes sources can get a lot of events quickly. At most you will get one email per minute.</p>
  <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn b -> %>
    <div class="form-group">
      <%= inputs_for b, :notifications, fn bn -> %>
        <%= text_input bn, :other_email_notifications, placeholder: "her@friend.com, him@company.com", class: "form-control form-control-margin" %>
        <%= error_tag bn, :other_email_notifications %>
        <small class="form-text text-muted">
          Comma separated list of emails please.
        </small>

        <div class="form-control-margin">
          <%= label bn, :user_email_notifications, "Send email alerts to the account owner ", class: "" %>
          <%= if is_nil(@user.email_preferred) do %>
            <%= link " (add a preferred email)", to: Routes.user_path(@conn, :edit), class: "label-padding"%>
          <% else %>
            <%= link " (#{@user.email_preferred})", to: Routes.user_path(@conn, :edit), class: "label-padding" %>
          <% end %>
          <%= checkbox bn, :user_email_notifications %>
          <%= error_tag bn, :user_email_notifications %>
        </div>

        <%= label bn, :team_user_ids_for_email, "Select some team members to alert", class: "label-padding" %>
        <%= multiple_select bn, :team_user_ids_for_email, Enum.map(@team.team_users, fn x -> {"#{x.name || x.email} (#{x.email})", x.id} end), selected: @source.notifications.team_user_ids_for_email, class: "form-control form-control-margin" %>
      <% end %>
    </div>
    <%= submit "Update email preferences", class: "btn btn-primary form-button" %>
  <% end %>
  <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn clear_b -> %>
    <%= inputs_for clear_b, :notifications, fn bn -> %>
      <%= hidden_input(bn, :user_email_notifications, value: "false") %>
      <%= hidden_input(bn, :team_user_ids_for_email, value: []) %>
      <%= hidden_input(bn, :other_email_notifications, value: "") %>
    <% end %>
    <%= submit "Reset SMS preferences", class: "btn btn-sm btn-secondary form-button" %>
  <% end %>

  <h5 class="header-margin">SMS Alerts</h5>
  <p>Get text message alerts when a source gets new events. Sometimes sources can get a lot of events quickly. At most you will get one text message per minute.</p>
  <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn c -> %>
    <div class="form-group">
      <div class="form-control-margin">
        <%= inputs_for c, :notifications, fn cn -> %>
          <%= label cn, :user_text_notifications, "Send SMS alerts to the account owner", class: "" %>
          <%= if is_nil(@user.phone) do %>
            <%= link " (add a phone number)", to: Routes.user_path(@conn, :edit), class: "label-padding" %>
          <% else %>
            <%= link " (#{@user.phone})", to: Routes.user_path(@conn, :edit), class: "label-padding" %>
          <% end %>
          <%= checkbox cn, :user_text_notifications %>
          <%= error_tag cn, :user_text_notifications %>
      </div>

      <%= label cn, :team_user_ids_for_sms, "Select some team members to alert (team members without phone numbers are not listed)", class: "label-padding" %>
      <%= multiple_select cn, :team_user_ids_for_sms, Enum.map(@team.team_users, fn x -> if x.phone, do: {"#{x.name || x.email} (#{x.phone})", x.id} end), selected: @source.notifications.team_user_ids_for_sms, class: "form-control form-control-margin" %>
      <% end %>
    </div>
    <%= submit "Update SMS preferences", class: "btn btn-primary form-button" %>
    <% end %>
  <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn clear_c -> %>
    <%= inputs_for clear_c, :notifications, fn cn -> %>
      <%= hidden_input(cn, :user_text_notifications, value: "false") %>
      <%= hidden_input(cn, :team_user_ids_for_sms, value: []) %>
    <% end %>
    <%= submit "Reset SMS preferences", class: "btn btn-sm btn-secondary form-button" %>
  <% end %>


  <h5 class="header-margin">Slack Alerts</h5>
  <p>Get Logflare notifications in your Slack channels! Separate from signing in with Slack. You can send alerts to any Slack channel from any Logflare source.</p>
    <div class="form-button">
      <a href="https://slack.com/oauth/authorize?client_id=689539426144.830460255254&scope=incoming-webhook&redirect_uri=<%= LogflareWeb.Endpoint.url() <> "/auth/slack/callback" %>&state=<%= Jason.encode!(%{"action" => "save_hook_url", "source" => @source}) %>"><img alt="Add to Slack" height="40" width="139" src="https://platform.slack-edge.com/img/add_to_slack.png" srcset="https://platform.slack-edge.com/img/add_to_slack.png 1x, https://platform.slack-edge.com/img/add_to_slack@2x.png 2x"></a>
    </div>
    <%= if @source.slack_hook_url do %>
      <%= link "Test Slack webhook", to: Routes.source_path(@conn, :test_slack_hook, @source), class: "btn btn-primary form-button", role: "button" %>
      <%= link "Delete Slack webhook", to: Routes.source_path(@conn, :delete_slack_hook, @source), class: "btn btn-sm btn-danger form-button", role: "button" %>
    <% end %>


  <h5 class="header-margin">Webhook Alerts</h5>
  <p>We recommend setting up <%= link "RequestBin", to: "https://requestbin.com/", target: "_blank" %> to see what our payloads look like. Once a webhook url is saved here you can send a test request to it.</p>
  <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn f -> %>
    <div class="form-group">
      <%= text_input f, :webhook_notification_url, placeholder: "https://mydomain.com/webhooks/logflare", class: "form-control form-control-margin" %>
      <small class="form-text text-muted">
        This endpoint should accept POST requests with a JSON body.
      </small>
      <%= error_tag f, :webhook_notification_url %>
    </div>
    <%= submit "Update webhook preferences", class: "btn btn-primary form-button" %>

  <% end %>
  <%= if @source.webhook_notification_url do %>
      <%= link "Test webhook", to: Routes.source_path(@conn, :test_alerts, @source), class: "btn btn-primary form-button", role: "button" %>
  <% end %>


  <h5 class="header-margin">Public Access</h5>
  <p>Public paths let you share your logs with other people without having to give them a login. Generate a public token and this source will be accessible by anyone with this url. Regenerate a public path if needed.</p>
  <%= if @source.public_token != nil do %>
    <div>
      <code><%= Routes.source_url(@conn, :public, @source.public_token) %></code>
      <button class="btn btn-secondary btn-sm" id="copy-path" data-clipboard-text="<%= Routes.source_url(@conn, :public, @source.public_token) %>">Copy path</button>
    </div>
  <% end %>
  <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn d -> %>
    <div class="form-group">
      <%= hidden_input d, :public_token, value: :crypto.strong_rand_bytes(12) |> Base.url_encode64, class: "form-control form-control-margin" %>
      <%= error_tag d, :public_token %>
    </div>
    <%= submit "Generate path", class: "btn btn-primary form-button" %>
  <% end %>

  <h5 class="header-margin">Rate Limit</h5>
  <p>Rate limits are based on the number of events per second on average for the last 60 seconds. This means if your rate limit is 10 per second you can burst up to 600 requests in a 60 second window if you have not sent any other events in during that window.  If you've sent in 100 events in that 60 seconds, then you can burst up to 500 at once.</p>
  <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn f -> %>
    <div class="form-group">
      <%= text_input f, :api_quota, class: "form-control form-control-margin", readonly: true %>
      <%= error_tag f, :api_quota %>
      <small class="form-text text-muted">
        Currently seeing <%= @source.metrics.avg %> events per second on average. Email <a href="mailto:support@logflare.app?Subject=Rate%20Limits" target="_top">support@logflare.app</a> to increase your rate limit.
      </small>
    </div>
    <%= submit "Update rate limit", class: "btn btn-primary form-button", disabled: true %>
  <% end %>

  <h5 class="header-margin">Backend TTL</h5>
  <%= if @conn.assigns.user.bigquery_project_id do %>
    <p>Set how long to keep data in your custom backend.</p>
    <%= form_for @changeset, Routes.source_path(@conn, :update, @source), fn e -> %>
      <div class="form-group">
        <%= text_input e, :bigquery_table_ttl, placeholder: "365", class: "form-control form-control-margin" %>
        <%= error_tag e, :bigquery_table_ttl %>
        <small class="form-text text-muted">
          Days to keep data.
        </small>
      </div>
      <%= submit "Update backend settings", class: "btn btn-primary form-button" %>
      <% end %>
  <% else %>
    <p>Add a Google Cloud Platform project ID to get started!</p>
    <%= link "Setup custom backend", to: Routes.user_path(@conn, :edit), class: "btn btn-primary form-button", role: "button" %>
  <% end %>

<script>
document.addEventListener("DOMContentLoaded", async () => {
  const clipboard = new ClipboardJS('#copy-path')
  clipboard.on('success', (e)  => {
      alert("Copied!");
      e.clearSelection();
  });

  clipboard.on('error', (e) => {
      alert("Something went wrong!");
      e.clearSelection();
  })
})



</script>
